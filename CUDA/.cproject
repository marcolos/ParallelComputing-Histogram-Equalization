<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?><cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.debug.1792552421">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.debug.1792552421" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug" description="" id="com.nvidia.cuda.toolchain.linux.configuration.debug.1792552421" name="Debug" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.enablement=false,org.eclipse.cdt.docker.launcher.containerbuild.property.selectedvolumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.volumes=,org.eclipse.cdt.docker.launcher.containerbuild.property.image=,org.eclipse.cdt.docker.launcher.containerbuild.property.connection=" parent="com.nvidia.cuda.toolchain.linux.configuration.debug">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.debug.1792552421." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.debugToolchain.955789218" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.debugToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.465179031" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/histogram_equalization_CUDA}/Debug" id="com.nvidia.cuda.toolchain.builder.2114873972" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.1220105656" name="NVCC linker" superClass="nvcc.linker">
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.linker.libs.783512212" name="Libraries (-l)" superClass="nvcc.linker.libs" useByScannerDiscovery="false" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_highgui"/>
									<listOptionValue builtIn="false" value="opencv_imgcodecs"/>
									<listOptionValue builtIn="false" value="opencv_core "/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
								</option>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.linker.paths.1291933652" name="Library search path (-L)" superClass="nvcc.linker.paths" useByScannerDiscovery="false" valueType="libPaths">
									<listOptionValue builtIn="false" value="/usr/lib"/>
								</option>
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.2013347463" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.816494421" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool commandLinePattern="${COMMAND} ${FLAGS} ${OUTPUT_FLAG} ${OUTPUT_PREFIX}${OUTPUT} ${INPUTS}" id="nvcc.compiler.2073853383" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.device-debug.646349841" name="Generate debug information for device code (-G)" superClass="com.nvidia.cuda.toolchain.compiler.device-debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option defaultValue="true" id="com.nvidia.cuda.toolchain.compiler.debug.1786351081" name="Generate debug information for host code (-g)" superClass="com.nvidia.cuda.toolchain.compiler.debug" useByScannerDiscovery="false" valueType="boolean"/>
								<option id="nvcc.compiler.pic.1744166807" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<option IS_BUILTIN_EMPTY="false" IS_VALUE_EMPTY="false" id="nvcc.compiler.include.paths.1791966885" name="Include paths (-I)" superClass="nvcc.compiler.include.paths" useByScannerDiscovery="false" valueType="includePath">
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/histogram_equalization_CUDA}/0_Simple&quot;"/>
									<listOptionValue builtIn="false" value="/usr/local/include/opencv-3.4.3"/>
									<listOptionValue builtIn="false" value="/usr/local/include"/>
									<listOptionValue builtIn="false" value="&quot;${workspace_loc:/histogram_equalization_CUDA}&quot;"/>
									<listOptionValue builtIn="false" value="&quot;${cuda_samples_dir:/histogram_equalization_CUDA}/common/inc&quot;"/>
								</option>
								<inputType id="com.nvidia.cuda.toolchain.input.c.1929354661" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.798444781" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.1201799411" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.toolchain.linux.configuration.release.851876529">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.toolchain.linux.configuration.release.851876529" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings/>
				<extensions>
					<extension id="org.eclipse.cdt.core.ELF" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.toolchain.nvccErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.CWDLocator" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.exe" buildProperties="org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.exe,org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release" description="" id="com.nvidia.cuda.toolchain.linux.configuration.release.851876529" name="Release" optionalBuildProperties="org.eclipse.cdt.docker.launcher.containerbuild.property.enablement=false,org.eclipse.cdt.docker.launcher.containerbuild.property.image=,org.eclipse.cdt.docker.launcher.containerbuild.property.connection=" parent="com.nvidia.cuda.toolchain.linux.configuration.release">
					<folderInfo id="com.nvidia.cuda.toolchain.linux.configuration.release.851876529." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.toolchain.linux.releaseToolchain.1271546618" name="CUDA Linux toolchain" superClass="com.nvidia.cuda.toolchain.linux.releaseToolchain">
							<targetPlatform archList="all" binaryParser="org.eclipse.cdt.core.ELF" id="com.nvidia.cuda.toolchain.targetLinuxPlatform.1621641789" isAbstract="false" osList="linux" superClass="com.nvidia.cuda.toolchain.targetLinuxPlatform"/>
							<builder buildPath="${workspace_loc:/histogram_equalization_CUDA}/Release" id="com.nvidia.cuda.toolchain.builder.1699271977" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit Builder" superClass="com.nvidia.cuda.toolchain.builder"/>
							<tool id="nvcc.linker.509363073" name="NVCC linker" superClass="nvcc.linker">
								<inputType id="com.nvidia.cuda.toolchain.nvcc.linker.input.1818542138" superClass="com.nvidia.cuda.toolchain.nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.1599509252" name="NVCC archiver" superClass="nvcc.archiver"/>
							<tool id="nvcc.compiler.1548921841" name="NVCC Compiler" superClass="nvcc.compiler">
								<option defaultValue="com.nvidia.cuda.toolchain.compiler.optimization.level3" id="com.nvidia.cuda.toolchain.compiler.optimization.1912267723" name="Optimization level" superClass="com.nvidia.cuda.toolchain.compiler.optimization" useByScannerDiscovery="false" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.862140649" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" useByScannerDiscovery="false"/>
								<inputType id="com.nvidia.cuda.toolchain.input.c.1315652996" superClass="com.nvidia.cuda.toolchain.input.c"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cu.513165722" superClass="com.nvidia.cuda.toolchain.input.cu"/>
								<inputType id="com.nvidia.cuda.toolchain.input.cpp.1436722928" superClass="com.nvidia.cuda.toolchain.input.cpp"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="histogram_equalization_CUDA.com.nvidia.cuda.toolchain.linux.build.exe.2067778077" name="Executable" projectType="com.nvidia.cuda.toolchain.linux.build.exe"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
	</storageModule>
	<storageModule moduleId="org.eclipse.cdt.core.LanguageSettingsProviders"/>
	<storageModule moduleId="org.eclipse.cdt.internal.ui.text.commentOwnerProjectMappings"/>
	<storageModule moduleId="org.eclipse.cdt.make.core.buildtargets"/>
	<storageModule moduleId="refreshScope" versionNumber="2">
		<configuration configurationName="Debug">
			<resource resourceType="PROJECT" workspacePath="/histogram_equalization_CUDA"/>
		</configuration>
		<configuration configurationName="Release">
			<resource resourceType="PROJECT" workspacePath="/histogram_equalization_CUDA"/>
		</configuration>
	</storageModule>
</cproject>
